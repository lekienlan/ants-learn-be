generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum category_type_enum {
  expense
  income
}

enum status_enum {
  active
  inactive
  deleted
}

enum transaction_type_enum {
  income
  budget
  expense
}

enum history_state_enum {
  original
  modified
  deleted
}

model categories {
  id           String             @id @default(uuid())
  code         String
  name         String
  style        Json?
  type         category_type_enum
  user_id      String?
  user         users?             @relation(fields: [user_id], references: [id])
  updated_at   DateTime?          @updatedAt
  created_at   DateTime?          @default(now())
  transactions transactions[]
}

model histories {
  id             String             @id @default(uuid())
  data           Json
  state          history_state_enum
  user_id        String
  transaction_id String?
  updated_at     DateTime?          @updatedAt
  created_at     DateTime?          @default(now())
  transactions   transactions?      @relation(fields: [transaction_id], references: [id])
}

model periods {
  id           String         @id @default(uuid())
  budget       Int
  end_date     DateTime
  expense      Int
  members      String[]
  repeat       Boolean
  start_date   DateTime
  transactions transactions[]
  updated_at   DateTime?      @updatedAt
  created_at   DateTime?      @default(now())
  pig          pigs?          @relation(fields: [pig_id], references: [id])
  pig_id       String
  status       status_enum    @default(active)
}

model pigs {
  id         String      @id @default(uuid())
  name       String
  style      Json?
  updated_at DateTime?   @updatedAt
  created_at DateTime?   @default(now())
  periods    periods[]
  user_id    String
  user       users?      @relation(fields: [user_id], references: [id])
  status     status_enum @default(active)
}

model tokens {
  id          String    @id @default(uuid())
  blacklisted Boolean
  expires     DateTime
  token       String
  user_id     String
  updated_at  DateTime? @updatedAt
  created_at  DateTime? @default(now())

  @@index([token], map: "token_1")
}

model transactions {
  id          String                @id @default(uuid())
  amount      Int
  currency    String?
  date        DateTime?             @default(now())
  note        String?
  period_id   String?
  period      periods?              @relation(fields: [period_id], references: [id])
  type        transaction_type_enum
  user_id     String
  user        users                 @relation(fields: [user_id], references: [id])
  category_id String?
  category    categories?           @relation(fields: [category_id], references: [id])
  updated_at  DateTime?             @updatedAt
  created_at  DateTime?             @default(now())
  histories   histories[]
  status      status_enum           @default(active)
}

model users {
  id           String         @id @default(uuid())
  email        String         @unique
  first_name   String
  last_name    String
  transactions transactions[]
  updated_at   DateTime?      @updatedAt
  created_at   DateTime?      @default(now())
  pigs         pigs[]
  categories   categories[]
}
